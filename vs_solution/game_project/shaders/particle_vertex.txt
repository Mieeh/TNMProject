#version 330 

layout(location = 0) in vec2 in_pos;
layout(location = 1) in vec4 in_color;

layout(location = 2) in float in_size;

layout(location = 3) in vec2 in_velocity;
layout(location = 4) in float in_lifeTime;
layout(location = 5) in float in_deathTime;

uniform vec2 gravity = vec2(0,0); // Gravity to apply to the particle movement

uniform mat4 projection_matrix;
uniform mat4 view_matrix = mat4(1.0); 

out VS_OUT {
	vec2 position;
	vec4 color;
	float size;
} vs_out;

void main()
{
	// position = position0 + (velocity0 * time) + ((acceleration * time^2) / 2)
	vs_out.position = in_pos + (in_velocity * in_lifeTime) + ((gravity * in_lifeTime * in_lifeTime)/2);
	vs_out.color = in_color;
	vs_out.color.a = 1 - (in_lifeTime / in_deathTime);
	vs_out.size = in_size;
}